sourceSets {
    main.java.srcDirs = ['src']
    main.resources.srcDirs = ['src']
}

configurations{
  provided
}

dependencies{
  provided project(':sponsorpay-android-support')
}

sourceSets.main.compileClasspath += configurations.provided
sourceSets.main.runtimeClasspath += configurations.provided

javadoc {
    doFirst {
        title = 'SponsorPay Android SDK v' + project.getVersion()
    }
    classpath += runtimeClasspath
}

afterEvaluate{
    jar.dependsOn getVersion
    javadoc.dependsOn getVersion
    configurations.archives.artifacts.removeAll { it.archiveTask.name =~ /release/ }
}

task release (type: Zip, dependsOn: ['jar', 'javadoc']) {
    baseName = 'sp-android-sdk'
    from docsDir
    from jar
    from 'release'
    into(project.name) {
        from getProjectDir()
        exclude 'build*'
        exclude 'bin'
        exclude 'gen'
        exclude 'release'
        exclude '*.jardesc'
        exclude '.git*'
        exclude '*gradle*'
    }
}

artifacts {
    release release
}

task getVersion {

    def p = /(\d+);\n\D*(\d+);\n\D*(\d+)/
    def sponsorpay = new File(getProjectDir(), 'src/com/sponsorpay/SponsorPay.java')

    def m = sponsorpay.text =~  p
     
    if (m.count>0) {
        project.version = m[0][1] + '.' + m[0][2]  + '.' + m[0][3]
    }

}
