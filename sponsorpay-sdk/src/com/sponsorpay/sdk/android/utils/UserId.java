/**
 * SponsorPay Android SDK
 *
 * Copyright 2011 - 2013 SponsorPay. All rights reserved.
 */

package com.sponsorpay.sdk.android.utils;

import java.util.UUID;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;

import com.sponsorpay.sdk.android.publisher.SponsorPayPublisher;

public class UserId {
	
	public static final String STATE_GENERATED_USERID_KEY = "STATE_GENERATED_USERID_KEY";

	public static synchronized String getAutoGenerated(Context context) {
		SharedPreferences state = context.getSharedPreferences(
				SponsorPayPublisher.PREFERENCES_FILENAME, Context.MODE_PRIVATE);

		String userIdValue = state.getString(STATE_GENERATED_USERID_KEY, null);

		if (userIdValue == null) {

			userIdValue = generateUserId(HostInfo.getHostInfo(context));

			Editor stateEditor = state.edit();
			stateEditor.putString(STATE_GENERATED_USERID_KEY, userIdValue);
			stateEditor.commit();
		}
				
		return userIdValue;
	}

	private static boolean isValidAndroidId(String androidId) {
		// Check for general ID validness
		if (!isValidId(androidId) || androidId.equals("9774d56d682e549c")) {
			return false;
		}

		return true;
	}

	private static boolean isValidId(String id) {
		// Check for null string
		// Check for empty or whitespace only string
		if (StringUtils.nullOrEmpty(id)) {
			return false;
		}

		// Check for the integer number 0
		Integer androidIdAsInteger = null;
		try {
			androidIdAsInteger = Integer.parseInt(id);
		} catch (NumberFormatException e) {
			// The string didn't have a valid integer format. Test for zero doesn't apply.
		}
		
		return ! (androidIdAsInteger != null && androidIdAsInteger.intValue() == 0);
	}

	private static String generateUserId(HostInfo hostInfo) {
		StringBuilder builder = new StringBuilder();

		String telephonyDeviceId = hostInfo.getUDID();
		String androidId = hostInfo.getAndroidId();
		String hardwareSerialNumber = hostInfo.getHardwareSerialNumber();
		
		if (isValidId(telephonyDeviceId)) {
			builder.append(telephonyDeviceId);
		}
		if (isValidAndroidId(androidId)) {
			builder.append(androidId);
		}
		if (isValidId(hardwareSerialNumber)) {
			builder.append(hardwareSerialNumber);
		}
		
		if (builder.length() == 0) {
			builder.append(UUID.randomUUID());
		}

		String baseText = builder.toString();
		String generatedId = SignatureTools.generateSHA1ForString(baseText);

		if (generatedId == null || generatedId.equals(SignatureTools.NO_SHA1_RESULT)) {
			generatedId = baseText;
		}

		return generatedId;
	}
}
